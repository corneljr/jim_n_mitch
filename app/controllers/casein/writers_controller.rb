# Scaffolding generated by Casein v5.0.0.0

module Casein
  class WritersController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Writers'
  		@writers = Writer.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View writer'
      @writer = Writer.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new writer'
    	@writer = Writer.new
    end

    def create
      @writer = Writer.new writer_params
    
      if @writer.save
        flash[:notice] = 'Writer created'
        redirect_to casein_writers_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new writer'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update writer'
      
      @writer = Writer.find params[:id]
    
      if @writer.update_attributes writer_params
        flash[:notice] = 'Writer has been updated'
        redirect_to casein_writers_path
      else
        flash.now[:warning] = 'There were problems when trying to update this writer'
        render :action => :show
      end
    end
 
    def destroy
      @writer = Writer.find params[:id]

      @writer.destroy
      flash[:notice] = 'Writer has been deleted'
      redirect_to casein_writers_path
    end
  
    private
      
      def writer_params
        params.require(:writer).permit(:name, :bio, :specialty, :avatar)
      end

  end
end